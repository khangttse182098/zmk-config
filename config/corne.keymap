/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        powertoy-search {
            bindings = <&kp LA(SPACE)>;
            key-positions = <39 38>;
        };

        right-shift {
            bindings = <&kp RSHIFT>;
            key-positions = <19 20>;
        };

        left-shift {
            bindings = <&kp LSHFT>;
            key-positions = <16 15>;
            layers = <0>;
        };

        left-control {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <15 14>;
            layers = <0>;
        };

        right-control {
            bindings = <&kp RIGHT_CONTROL>;
            key-positions = <20 21>;
        };

        ctrl-shift-right {
            bindings = <&kp RS(RC(RIGHT_CONTROL))>;
            key-positions = <19 21>;
        };

        ctrl-shift-left {
            bindings = <&kp RS(RC(RIGHT_CONTROL))>;
            key-positions = <16 14>;
            layers = <0>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <16 15>;
            layers = <2>;
        };

        caplocks {
            bindings = <&kp CAPS>;
            key-positions = <36 41>;
            layers = <0>;
        };

        left-alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <15 14>;
            layers = <2>;
        };

        switch-undertale-layer {
            bindings = <&tog 5>;
            key-positions = <24 35>;
            layers = <0 5>;
        };
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <41 40 39 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <41 40 39 38 37 36 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };
    };

    macros {
        double_colon_macro: double_colon_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp COLON>;
            label = "DOUBLE_COLON_MACRO";
        };

        arrow_function: arrow_function {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp SPACE &kp EQUAL &kp GT &kp SPACE &kp LEFT_BRACE &kp LEFT &kp TAB &kp ENTER>;
            label = "ARROW_FUNCTION";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        characters {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R  &kp T    &kp Y          &kp U      &kp I      &kp O    &kp P          &kp BSPC
&kp ESC    &kp A  &kp S  &kp D  &kp F  &kp G    &kp H          &kp J      &kp K      &kp L    &kp SEMICOLON  &kp ENTER
&kp LCTRL  &kp Z  &kp X  &kp C  &kp V  &kp B    &kp N          &kp M      &kp COMMA  &kp DOT  &kp FSLH       &kp RGUI
                         &mo 3  &mo 2  &mo 1    &kp RIGHT_ALT  &kp SPACE  &trans
            >;
        };

        numbers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &trans         &kp N7        &kp N8        &kp N9        &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                                        &trans        &trans        &trans          &kp RIGHT_ALT  &kp SPACE     &kp ENTER
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp SQT          &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES  &kp GRAVE         &kp AMPERSAND  &double_colon_macro  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PERCENT      &kp BSPC
&trans   &kp EXCLAMATION  &kp MINUS      &kp PLUS          &kp EQUAL          &kp HASH          &kp PIPE       &kp COLON            &kp LBKT              &kp RBKT               &arrow_function  &kp ENTER
&trans   &kp CARET        &kp SLASH      &kp ASTERISK      &kp BACKSLASH      &kp UNDERSCORE    &kp TILDE      &kp DOLLAR           &kp LBRC              &kp RBRC               &kp AT_SIGN      &trans
                                         &trans            &trans             &trans            &kp RIGHT_ALT  &kp SPACE            &trans
            >;
        };

        controls {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans    &trans          &trans    &trans        &trans           &trans  &trans
&trans  &trans  &kp RC(X)  &kp RC(V)  &kp RC(C)  &trans    &kp LEFT_ARROW  &kp DOWN  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans    &trans          &trans    &trans        &trans           &trans  &trans
                           &trans     &trans     &trans    &trans          &trans    &trans
            >;
        };

        left-number-layer {
            bindings = <
&trans  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp N9        &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };

        undertale-layout {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &kp UP_ARROW  &trans     &trans  &trans
&trans  &kp Z   &kp X   &kp C   &kp V   &trans    &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans        &trans     &trans  &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };
    };
};
